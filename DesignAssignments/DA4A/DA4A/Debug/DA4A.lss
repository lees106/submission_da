
DA4A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000048a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000416  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  0000048a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000048a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000004fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000752  00000000  00000000  00000524  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000690  00000000  00000000  00000c76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000302  00000000  00000000  00001306  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000007c  00000000  00000000  00001608  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003aa  00000000  00000000  00001684  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000113  00000000  00000000  00001a2e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001b41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 78 00 	jmp	0xf0	; 0xf0 <__vector_4>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a3 30       	cpi	r26, 0x03	; 3
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 09 02 	jmp	0x412	; 0x412 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
char curr_state = 0;


int main(void) {
	
	DDRB = 0x00;
  90:	14 b8       	out	0x04, r1	; 4
	DDRB |= (1<<DDB1);											//Output for PWM
  92:	21 9a       	sbi	0x04, 1	; 4
	DDRC = 0x00;												//Input for button
  94:	17 b8       	out	0x07, r1	; 7
	PORTC |= (1 << DDC1);										//Internal pullup for PINC1
  96:	41 9a       	sbi	0x08, 1	; 8
	
	//ADC init	
	ADMUX  |= (1<<REFS0);										//Vref = AVCC
  98:	ec e7       	ldi	r30, 0x7C	; 124
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	80 81       	ld	r24, Z
  9e:	80 64       	ori	r24, 0x40	; 64
  a0:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADEN) | (1 <<ADSC);							//Enable ADC and start conversion
  a2:	ea e7       	ldi	r30, 0x7A	; 122
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	80 81       	ld	r24, Z
  a8:	80 6c       	ori	r24, 0xC0	; 192
  aa:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);				//Prescaler clock of 128
  ac:	80 81       	ld	r24, Z
  ae:	87 60       	ori	r24, 0x07	; 7
  b0:	80 83       	st	Z, r24
	ADCSRB = 0;													//Free running mode	  
  b2:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	//Timer init
	TCCR1A |= (1 << COM1A1) | (1 << COM1B1);					// Clear OC1A on compare match
  b6:	e0 e8       	ldi	r30, 0x80	; 128
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	80 6a       	ori	r24, 0xA0	; 160
  be:	80 83       	st	Z, r24
	
	TCCR1A |= (1 << WGM11);	
  c0:	80 81       	ld	r24, Z
  c2:	82 60       	ori	r24, 0x02	; 2
  c4:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM13) | (1 << WGM12);						// Fast PWM, Non-inverted.
  c6:	e1 e8       	ldi	r30, 0x81	; 129
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	80 81       	ld	r24, Z
  cc:	88 61       	ori	r24, 0x18	; 24
  ce:	80 83       	st	Z, r24
	
	TCCR1B |= (1 << CS11);										// Prescaler = 8
  d0:	80 81       	ld	r24, Z
  d2:	82 60       	ori	r24, 0x02	; 2
  d4:	80 83       	st	Z, r24
	
	//Interrupt Config
	PCICR = (1 << PCIE1);										//Enable interrupt 1
  d6:	82 e0       	ldi	r24, 0x02	; 2
  d8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
	PCMSK1 = (1 << PCINT9);										//Interrupt for PINB1
  dc:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	sei();														//Enable global interrupts
  e0:	78 94       	sei
	
	ICR1 = 5000;
  e2:	88 e8       	ldi	r24, 0x88	; 136
  e4:	93 e1       	ldi	r25, 0x13	; 19
  e6:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
  ea:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
  ee:	ff cf       	rjmp	.-2      	; 0xee <main+0x5e>

000000f0 <__vector_4>:
	
	while (1){}
}

ISR(PCINT1_vect)
{
  f0:	1f 92       	push	r1
  f2:	0f 92       	push	r0
  f4:	0f b6       	in	r0, 0x3f	; 63
  f6:	0f 92       	push	r0
  f8:	11 24       	eor	r1, r1
  fa:	2f 93       	push	r18
  fc:	3f 93       	push	r19
  fe:	4f 93       	push	r20
 100:	5f 93       	push	r21
 102:	6f 93       	push	r22
 104:	7f 93       	push	r23
 106:	8f 93       	push	r24
 108:	9f 93       	push	r25
 10a:	af 93       	push	r26
 10c:	bf 93       	push	r27
 10e:	ef 93       	push	r30
 110:	ff 93       	push	r31
	if(!(PINC & (1 << PINC1))) {
 112:	31 99       	sbic	0x06, 1	; 6
 114:	43 c0       	rjmp	.+134    	; 0x19c <__vector_4+0xac>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 116:	2f ef       	ldi	r18, 0xFF	; 255
 118:	31 ee       	ldi	r19, 0xE1	; 225
 11a:	84 e0       	ldi	r24, 0x04	; 4
 11c:	21 50       	subi	r18, 0x01	; 1
 11e:	30 40       	sbci	r19, 0x00	; 0
 120:	80 40       	sbci	r24, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <__vector_4+0x2c>
 124:	00 c0       	rjmp	.+0      	; 0x126 <__vector_4+0x36>
 126:	00 00       	nop
		_delay_ms(100);											// Debounces button
		while(!(PINC & (1 << PINC1)));							// Checks if button was pressed
 128:	31 9b       	sbis	0x06, 1	; 6
 12a:	fe cf       	rjmp	.-4      	; 0x128 <__vector_4+0x38>
		
		if(curr_state) {
 12c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 130:	88 23       	and	r24, r24
 132:	49 f1       	breq	.+82     	; 0x186 <__vector_4+0x96>
			PORTB |= (1 << DDB1);								//Turns on motor
 134:	29 9a       	sbi	0x05, 1	; 5
			
			while(!(ADCSRA & (1<<ADIF)));						//Waits for conversion to finish
 136:	ea e7       	ldi	r30, 0x7A	; 122
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	84 ff       	sbrs	r24, 4
 13e:	fd cf       	rjmp	.-6      	; 0x13a <__vector_4+0x4a>
			ADCVal = ADCH + (ADCL*0b11000000);					//10-bits of ADC register
 140:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 144:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	30 ec       	ldi	r19, 0xC0	; 192
 14c:	23 9f       	mul	r18, r19
 14e:	80 0d       	add	r24, r0
 150:	91 1d       	adc	r25, r1
 152:	11 24       	eor	r1, r1
 154:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <ADCVal+0x1>
 158:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <ADCVal>
			
			OCR1A = ADCVal *0.95;								//Duty Cycle
 15c:	60 91 01 01 	lds	r22, 0x0101	; 0x800101 <ADCVal>
 160:	70 91 02 01 	lds	r23, 0x0102	; 0x800102 <ADCVal+0x1>
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	0e 94 0e 01 	call	0x21c	; 0x21c <__floatunsisf>
 16c:	23 e3       	ldi	r18, 0x33	; 51
 16e:	33 e3       	ldi	r19, 0x33	; 51
 170:	43 e7       	ldi	r20, 0x73	; 115
 172:	5f e3       	ldi	r21, 0x3F	; 63
 174:	0e 94 74 01 	call	0x2e8	; 0x2e8 <__mulsf3>
 178:	0e 94 df 00 	call	0x1be	; 0x1be <__fixunssfsi>
 17c:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 180:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 184:	05 c0       	rjmp	.+10     	; 0x190 <__vector_4+0xa0>
		}
		
		else if(!curr_state) {
		    PORTB &= ~(1 << DDB1);								// Turns off motor
 186:	29 98       	cbi	0x05, 1	; 5
			
			OCR1A = 0;											// Reset
 188:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 18c:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
		}
		
		curr_state ^= 1;										// Remembers state of button
 190:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <_edata>
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	89 27       	eor	r24, r25
 198:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	}
 19c:	ff 91       	pop	r31
 19e:	ef 91       	pop	r30
 1a0:	bf 91       	pop	r27
 1a2:	af 91       	pop	r26
 1a4:	9f 91       	pop	r25
 1a6:	8f 91       	pop	r24
 1a8:	7f 91       	pop	r23
 1aa:	6f 91       	pop	r22
 1ac:	5f 91       	pop	r21
 1ae:	4f 91       	pop	r20
 1b0:	3f 91       	pop	r19
 1b2:	2f 91       	pop	r18
 1b4:	0f 90       	pop	r0
 1b6:	0f be       	out	0x3f, r0	; 63
 1b8:	0f 90       	pop	r0
 1ba:	1f 90       	pop	r1
 1bc:	18 95       	reti

000001be <__fixunssfsi>:
 1be:	0e 94 53 01 	call	0x2a6	; 0x2a6 <__fp_splitA>
 1c2:	88 f0       	brcs	.+34     	; 0x1e6 <__fixunssfsi+0x28>
 1c4:	9f 57       	subi	r25, 0x7F	; 127
 1c6:	98 f0       	brcs	.+38     	; 0x1ee <__fixunssfsi+0x30>
 1c8:	b9 2f       	mov	r27, r25
 1ca:	99 27       	eor	r25, r25
 1cc:	b7 51       	subi	r27, 0x17	; 23
 1ce:	b0 f0       	brcs	.+44     	; 0x1fc <__fixunssfsi+0x3e>
 1d0:	e1 f0       	breq	.+56     	; 0x20a <__fixunssfsi+0x4c>
 1d2:	66 0f       	add	r22, r22
 1d4:	77 1f       	adc	r23, r23
 1d6:	88 1f       	adc	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	1a f0       	brmi	.+6      	; 0x1e2 <__fixunssfsi+0x24>
 1dc:	ba 95       	dec	r27
 1de:	c9 f7       	brne	.-14     	; 0x1d2 <__fixunssfsi+0x14>
 1e0:	14 c0       	rjmp	.+40     	; 0x20a <__fixunssfsi+0x4c>
 1e2:	b1 30       	cpi	r27, 0x01	; 1
 1e4:	91 f0       	breq	.+36     	; 0x20a <__fixunssfsi+0x4c>
 1e6:	0e 94 6d 01 	call	0x2da	; 0x2da <__fp_zero>
 1ea:	b1 e0       	ldi	r27, 0x01	; 1
 1ec:	08 95       	ret
 1ee:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__fp_zero>
 1f2:	67 2f       	mov	r22, r23
 1f4:	78 2f       	mov	r23, r24
 1f6:	88 27       	eor	r24, r24
 1f8:	b8 5f       	subi	r27, 0xF8	; 248
 1fa:	39 f0       	breq	.+14     	; 0x20a <__fixunssfsi+0x4c>
 1fc:	b9 3f       	cpi	r27, 0xF9	; 249
 1fe:	cc f3       	brlt	.-14     	; 0x1f2 <__fixunssfsi+0x34>
 200:	86 95       	lsr	r24
 202:	77 95       	ror	r23
 204:	67 95       	ror	r22
 206:	b3 95       	inc	r27
 208:	d9 f7       	brne	.-10     	; 0x200 <__fixunssfsi+0x42>
 20a:	3e f4       	brtc	.+14     	; 0x21a <__fixunssfsi+0x5c>
 20c:	90 95       	com	r25
 20e:	80 95       	com	r24
 210:	70 95       	com	r23
 212:	61 95       	neg	r22
 214:	7f 4f       	sbci	r23, 0xFF	; 255
 216:	8f 4f       	sbci	r24, 0xFF	; 255
 218:	9f 4f       	sbci	r25, 0xFF	; 255
 21a:	08 95       	ret

0000021c <__floatunsisf>:
 21c:	e8 94       	clt
 21e:	09 c0       	rjmp	.+18     	; 0x232 <__floatsisf+0x12>

00000220 <__floatsisf>:
 220:	97 fb       	bst	r25, 7
 222:	3e f4       	brtc	.+14     	; 0x232 <__floatsisf+0x12>
 224:	90 95       	com	r25
 226:	80 95       	com	r24
 228:	70 95       	com	r23
 22a:	61 95       	neg	r22
 22c:	7f 4f       	sbci	r23, 0xFF	; 255
 22e:	8f 4f       	sbci	r24, 0xFF	; 255
 230:	9f 4f       	sbci	r25, 0xFF	; 255
 232:	99 23       	and	r25, r25
 234:	a9 f0       	breq	.+42     	; 0x260 <__floatsisf+0x40>
 236:	f9 2f       	mov	r31, r25
 238:	96 e9       	ldi	r25, 0x96	; 150
 23a:	bb 27       	eor	r27, r27
 23c:	93 95       	inc	r25
 23e:	f6 95       	lsr	r31
 240:	87 95       	ror	r24
 242:	77 95       	ror	r23
 244:	67 95       	ror	r22
 246:	b7 95       	ror	r27
 248:	f1 11       	cpse	r31, r1
 24a:	f8 cf       	rjmp	.-16     	; 0x23c <__floatsisf+0x1c>
 24c:	fa f4       	brpl	.+62     	; 0x28c <__floatsisf+0x6c>
 24e:	bb 0f       	add	r27, r27
 250:	11 f4       	brne	.+4      	; 0x256 <__floatsisf+0x36>
 252:	60 ff       	sbrs	r22, 0
 254:	1b c0       	rjmp	.+54     	; 0x28c <__floatsisf+0x6c>
 256:	6f 5f       	subi	r22, 0xFF	; 255
 258:	7f 4f       	sbci	r23, 0xFF	; 255
 25a:	8f 4f       	sbci	r24, 0xFF	; 255
 25c:	9f 4f       	sbci	r25, 0xFF	; 255
 25e:	16 c0       	rjmp	.+44     	; 0x28c <__floatsisf+0x6c>
 260:	88 23       	and	r24, r24
 262:	11 f0       	breq	.+4      	; 0x268 <__floatsisf+0x48>
 264:	96 e9       	ldi	r25, 0x96	; 150
 266:	11 c0       	rjmp	.+34     	; 0x28a <__floatsisf+0x6a>
 268:	77 23       	and	r23, r23
 26a:	21 f0       	breq	.+8      	; 0x274 <__floatsisf+0x54>
 26c:	9e e8       	ldi	r25, 0x8E	; 142
 26e:	87 2f       	mov	r24, r23
 270:	76 2f       	mov	r23, r22
 272:	05 c0       	rjmp	.+10     	; 0x27e <__floatsisf+0x5e>
 274:	66 23       	and	r22, r22
 276:	71 f0       	breq	.+28     	; 0x294 <__floatsisf+0x74>
 278:	96 e8       	ldi	r25, 0x86	; 134
 27a:	86 2f       	mov	r24, r22
 27c:	70 e0       	ldi	r23, 0x00	; 0
 27e:	60 e0       	ldi	r22, 0x00	; 0
 280:	2a f0       	brmi	.+10     	; 0x28c <__floatsisf+0x6c>
 282:	9a 95       	dec	r25
 284:	66 0f       	add	r22, r22
 286:	77 1f       	adc	r23, r23
 288:	88 1f       	adc	r24, r24
 28a:	da f7       	brpl	.-10     	; 0x282 <__floatsisf+0x62>
 28c:	88 0f       	add	r24, r24
 28e:	96 95       	lsr	r25
 290:	87 95       	ror	r24
 292:	97 f9       	bld	r25, 7
 294:	08 95       	ret

00000296 <__fp_split3>:
 296:	57 fd       	sbrc	r21, 7
 298:	90 58       	subi	r25, 0x80	; 128
 29a:	44 0f       	add	r20, r20
 29c:	55 1f       	adc	r21, r21
 29e:	59 f0       	breq	.+22     	; 0x2b6 <__fp_splitA+0x10>
 2a0:	5f 3f       	cpi	r21, 0xFF	; 255
 2a2:	71 f0       	breq	.+28     	; 0x2c0 <__fp_splitA+0x1a>
 2a4:	47 95       	ror	r20

000002a6 <__fp_splitA>:
 2a6:	88 0f       	add	r24, r24
 2a8:	97 fb       	bst	r25, 7
 2aa:	99 1f       	adc	r25, r25
 2ac:	61 f0       	breq	.+24     	; 0x2c6 <__fp_splitA+0x20>
 2ae:	9f 3f       	cpi	r25, 0xFF	; 255
 2b0:	79 f0       	breq	.+30     	; 0x2d0 <__fp_splitA+0x2a>
 2b2:	87 95       	ror	r24
 2b4:	08 95       	ret
 2b6:	12 16       	cp	r1, r18
 2b8:	13 06       	cpc	r1, r19
 2ba:	14 06       	cpc	r1, r20
 2bc:	55 1f       	adc	r21, r21
 2be:	f2 cf       	rjmp	.-28     	; 0x2a4 <__fp_split3+0xe>
 2c0:	46 95       	lsr	r20
 2c2:	f1 df       	rcall	.-30     	; 0x2a6 <__fp_splitA>
 2c4:	08 c0       	rjmp	.+16     	; 0x2d6 <__fp_splitA+0x30>
 2c6:	16 16       	cp	r1, r22
 2c8:	17 06       	cpc	r1, r23
 2ca:	18 06       	cpc	r1, r24
 2cc:	99 1f       	adc	r25, r25
 2ce:	f1 cf       	rjmp	.-30     	; 0x2b2 <__fp_splitA+0xc>
 2d0:	86 95       	lsr	r24
 2d2:	71 05       	cpc	r23, r1
 2d4:	61 05       	cpc	r22, r1
 2d6:	08 94       	sec
 2d8:	08 95       	ret

000002da <__fp_zero>:
 2da:	e8 94       	clt

000002dc <__fp_szero>:
 2dc:	bb 27       	eor	r27, r27
 2de:	66 27       	eor	r22, r22
 2e0:	77 27       	eor	r23, r23
 2e2:	cb 01       	movw	r24, r22
 2e4:	97 f9       	bld	r25, 7
 2e6:	08 95       	ret

000002e8 <__mulsf3>:
 2e8:	0e 94 87 01 	call	0x30e	; 0x30e <__mulsf3x>
 2ec:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__fp_round>
 2f0:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__fp_pscA>
 2f4:	38 f0       	brcs	.+14     	; 0x304 <__mulsf3+0x1c>
 2f6:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <__fp_pscB>
 2fa:	20 f0       	brcs	.+8      	; 0x304 <__mulsf3+0x1c>
 2fc:	95 23       	and	r25, r21
 2fe:	11 f0       	breq	.+4      	; 0x304 <__mulsf3+0x1c>
 300:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__fp_inf>
 304:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__fp_nan>
 308:	11 24       	eor	r1, r1
 30a:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__fp_szero>

0000030e <__mulsf3x>:
 30e:	0e 94 4b 01 	call	0x296	; 0x296 <__fp_split3>
 312:	70 f3       	brcs	.-36     	; 0x2f0 <__mulsf3+0x8>

00000314 <__mulsf3_pse>:
 314:	95 9f       	mul	r25, r21
 316:	c1 f3       	breq	.-16     	; 0x308 <__mulsf3+0x20>
 318:	95 0f       	add	r25, r21
 31a:	50 e0       	ldi	r21, 0x00	; 0
 31c:	55 1f       	adc	r21, r21
 31e:	62 9f       	mul	r22, r18
 320:	f0 01       	movw	r30, r0
 322:	72 9f       	mul	r23, r18
 324:	bb 27       	eor	r27, r27
 326:	f0 0d       	add	r31, r0
 328:	b1 1d       	adc	r27, r1
 32a:	63 9f       	mul	r22, r19
 32c:	aa 27       	eor	r26, r26
 32e:	f0 0d       	add	r31, r0
 330:	b1 1d       	adc	r27, r1
 332:	aa 1f       	adc	r26, r26
 334:	64 9f       	mul	r22, r20
 336:	66 27       	eor	r22, r22
 338:	b0 0d       	add	r27, r0
 33a:	a1 1d       	adc	r26, r1
 33c:	66 1f       	adc	r22, r22
 33e:	82 9f       	mul	r24, r18
 340:	22 27       	eor	r18, r18
 342:	b0 0d       	add	r27, r0
 344:	a1 1d       	adc	r26, r1
 346:	62 1f       	adc	r22, r18
 348:	73 9f       	mul	r23, r19
 34a:	b0 0d       	add	r27, r0
 34c:	a1 1d       	adc	r26, r1
 34e:	62 1f       	adc	r22, r18
 350:	83 9f       	mul	r24, r19
 352:	a0 0d       	add	r26, r0
 354:	61 1d       	adc	r22, r1
 356:	22 1f       	adc	r18, r18
 358:	74 9f       	mul	r23, r20
 35a:	33 27       	eor	r19, r19
 35c:	a0 0d       	add	r26, r0
 35e:	61 1d       	adc	r22, r1
 360:	23 1f       	adc	r18, r19
 362:	84 9f       	mul	r24, r20
 364:	60 0d       	add	r22, r0
 366:	21 1d       	adc	r18, r1
 368:	82 2f       	mov	r24, r18
 36a:	76 2f       	mov	r23, r22
 36c:	6a 2f       	mov	r22, r26
 36e:	11 24       	eor	r1, r1
 370:	9f 57       	subi	r25, 0x7F	; 127
 372:	50 40       	sbci	r21, 0x00	; 0
 374:	9a f0       	brmi	.+38     	; 0x39c <__mulsf3_pse+0x88>
 376:	f1 f0       	breq	.+60     	; 0x3b4 <__mulsf3_pse+0xa0>
 378:	88 23       	and	r24, r24
 37a:	4a f0       	brmi	.+18     	; 0x38e <__mulsf3_pse+0x7a>
 37c:	ee 0f       	add	r30, r30
 37e:	ff 1f       	adc	r31, r31
 380:	bb 1f       	adc	r27, r27
 382:	66 1f       	adc	r22, r22
 384:	77 1f       	adc	r23, r23
 386:	88 1f       	adc	r24, r24
 388:	91 50       	subi	r25, 0x01	; 1
 38a:	50 40       	sbci	r21, 0x00	; 0
 38c:	a9 f7       	brne	.-22     	; 0x378 <__mulsf3_pse+0x64>
 38e:	9e 3f       	cpi	r25, 0xFE	; 254
 390:	51 05       	cpc	r21, r1
 392:	80 f0       	brcs	.+32     	; 0x3b4 <__mulsf3_pse+0xa0>
 394:	0c 94 e1 01 	jmp	0x3c2	; 0x3c2 <__fp_inf>
 398:	0c 94 6e 01 	jmp	0x2dc	; 0x2dc <__fp_szero>
 39c:	5f 3f       	cpi	r21, 0xFF	; 255
 39e:	e4 f3       	brlt	.-8      	; 0x398 <__mulsf3_pse+0x84>
 3a0:	98 3e       	cpi	r25, 0xE8	; 232
 3a2:	d4 f3       	brlt	.-12     	; 0x398 <__mulsf3_pse+0x84>
 3a4:	86 95       	lsr	r24
 3a6:	77 95       	ror	r23
 3a8:	67 95       	ror	r22
 3aa:	b7 95       	ror	r27
 3ac:	f7 95       	ror	r31
 3ae:	e7 95       	ror	r30
 3b0:	9f 5f       	subi	r25, 0xFF	; 255
 3b2:	c1 f7       	brne	.-16     	; 0x3a4 <__mulsf3_pse+0x90>
 3b4:	fe 2b       	or	r31, r30
 3b6:	88 0f       	add	r24, r24
 3b8:	91 1d       	adc	r25, r1
 3ba:	96 95       	lsr	r25
 3bc:	87 95       	ror	r24
 3be:	97 f9       	bld	r25, 7
 3c0:	08 95       	ret

000003c2 <__fp_inf>:
 3c2:	97 f9       	bld	r25, 7
 3c4:	9f 67       	ori	r25, 0x7F	; 127
 3c6:	80 e8       	ldi	r24, 0x80	; 128
 3c8:	70 e0       	ldi	r23, 0x00	; 0
 3ca:	60 e0       	ldi	r22, 0x00	; 0
 3cc:	08 95       	ret

000003ce <__fp_nan>:
 3ce:	9f ef       	ldi	r25, 0xFF	; 255
 3d0:	80 ec       	ldi	r24, 0xC0	; 192
 3d2:	08 95       	ret

000003d4 <__fp_pscA>:
 3d4:	00 24       	eor	r0, r0
 3d6:	0a 94       	dec	r0
 3d8:	16 16       	cp	r1, r22
 3da:	17 06       	cpc	r1, r23
 3dc:	18 06       	cpc	r1, r24
 3de:	09 06       	cpc	r0, r25
 3e0:	08 95       	ret

000003e2 <__fp_pscB>:
 3e2:	00 24       	eor	r0, r0
 3e4:	0a 94       	dec	r0
 3e6:	12 16       	cp	r1, r18
 3e8:	13 06       	cpc	r1, r19
 3ea:	14 06       	cpc	r1, r20
 3ec:	05 06       	cpc	r0, r21
 3ee:	08 95       	ret

000003f0 <__fp_round>:
 3f0:	09 2e       	mov	r0, r25
 3f2:	03 94       	inc	r0
 3f4:	00 0c       	add	r0, r0
 3f6:	11 f4       	brne	.+4      	; 0x3fc <__fp_round+0xc>
 3f8:	88 23       	and	r24, r24
 3fa:	52 f0       	brmi	.+20     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3fc:	bb 0f       	add	r27, r27
 3fe:	40 f4       	brcc	.+16     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 400:	bf 2b       	or	r27, r31
 402:	11 f4       	brne	.+4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 404:	60 ff       	sbrs	r22, 0
 406:	04 c0       	rjmp	.+8      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 408:	6f 5f       	subi	r22, 0xFF	; 255
 40a:	7f 4f       	sbci	r23, 0xFF	; 255
 40c:	8f 4f       	sbci	r24, 0xFF	; 255
 40e:	9f 4f       	sbci	r25, 0xFF	; 255
 410:	08 95       	ret

00000412 <_exit>:
 412:	f8 94       	cli

00000414 <__stop_program>:
 414:	ff cf       	rjmp	.-2      	; 0x414 <__stop_program>
